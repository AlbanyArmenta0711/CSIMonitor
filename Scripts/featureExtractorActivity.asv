%Script that loads CSI csv file generated by Activity_datfile_to_csvfile
%script, process CSI amplitude and extract time and frequency domain
%features in order to generate an observation
%RESULT: activity observation

clc; clear; 

clc; clear;
%Load CSI File
fileName = '*****.csv'; %Path/Name of the CSI csv file to be loaded
csiFile = load(fileName); 

%Separate CSI amplitudes and phase in two different numeric matrices
csiAmps = csiFile(:,2:91); %Column 1 is the timestamp
csiPhases = csiFile(:,92:181); 

fs = 25; %Sample frequency in Hz
t = 40; %Length of time window in seconds
sc = 10; %Number of sensitive subcarriers to be used for feature extraction

%Define feature vectors/matrices
CD1Var = zeros(1,sc); %Variance of Detailed Coefficients of each sc
CD2Var = zeros(1,sc);
CD3Var = zeros(1,sc);
CD4Var = zeros(1,sc);
ApproxVar = zeros(1,sc); %Variance of Approximation Coefficients of each sc
CD1Mean = zeros(1,sc);
CD2Mean = zeros(1,sc);
CD3Mean = zeros(1,sc);
CD4Mean = zeros(1,sc);
ApproxMean = zeros(1,sc); %Mean of Approximation Coefficients of each sc
MeanSC = zeros(1,sc);  %Time domain Mean 
VarSC = zeros(1,sc);  %Time domain Variance
SkwSC = zeros(1,sc);  %Time domain Skewness
KurtSC = zeros(1,sc);     %Time domain Kurtosis
MAVSC = zeros(1,sc); %Time domain MEAN ABSOLUTE VALUE
SSISC = zeros(1,sc); %Time domain SIMPLE SIGN INTEGRAL
RMSSC = zeros(1,sc); %Time domain ROOT MEAN SQUARE
BREstimation = zeros(1,1); %First Breathing Rate Estimation
MaxFreq = zeros(1,sc); %Max Frequency of Power Spectrum of each sc
SpectrumSTD = zeros(1,sc); %Standard Deviation of Power Spectrum of each sc

%Only CSI amplitudes will be used
[rows,cols] = size(csiAmps); 
%Hampel Identifier application
[csiHampel,hampelIndex] = hampel(csiAmps,round(rows/5),2); 
%SG Filter
smoothCSI = csiHampel; 
smoothCSI = sgolayfilt(smoothCSI,11,51); 
%Subcarrier Selection
[dataCalibrated,indexes] = subcarrierSelection(dataCalibrated,sc);

%Obtain Frequency Domain of sensitive calibrated subcarriers
n = 2^nextpow2(rows);
X = fft(dataCalibrated,n);
X = X./max(X);
X = fftshift(X);
psd = abs(X);
kk = 0:n-1;
F = kk/n*fs-fs/2;
[~,index] = find(F==0);
F = F(index:n);
psd = psd(index:n,:);

%Normalize calibrated signals between 0 and 1 
calibratedNorm = normalize(dataCalibrated,'range',[0 1]);      
%MEAN ABSOLUTE VALUE
MAVSC(1,:) = mean(abs(dataCalibrated));
%SIMPLE SIGN INTEGRAL
SSISC(1,:) = sum(abs(dataCalibrated).^2);
%ROOT MEAN SQUARE
RMSSC(1,:) = sqrt(SSISC(atributesIndex,:)./rows);
%Mean of each calibrated signal
MeanSC(1,:) = mean(calibratedNorm);
%Variance of each calibrated signal
VarSC(1,:) = var(calibratedNorm); 
%Skewness of each calibrated signal
SkwSC(1,:) = skewness(calibratedNorm);
%Kurtosis of each calibrated signal
KurtSC(1,:) = kurtosis(calibratedNorm);
[~,maxPos] = max(psd);    
%MAX FREQUENCY IN POWER SPECTRUM
MaxFreq(1,:)=F(maxPos);
%STANDARD DEVIATION OF POWER SPECTRUM
SpectrumSTD(1,:) = std(psd); 